/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  9
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       volVectorField;
    location    "0";
    object      H;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 -1 0 0 0 1 0];

//internalField   uniform (0 0 0);

internalField   #codeStream
{
        codeInclude
        #{
                #include "fvCFD.H"
                #include "Ostream.H"
        #};

        codeOptions
        #{
                -I$(LIB_SRC)/finiteVolume/lnInclude \
                -I$(LIB_SRC)/meshTools/lnInclude
        #};

        codeLibs
        #{
                -lmeshTools \
                -lfiniteVolume
        #};

        code
        #{

		scalar Hmax = 10051.76;

                const IOdictionary& d = static_cast<const IOdictionary&>(dict);
                const fvMesh& mesh = refCast<const fvMesh>(d.db());

                vectorField H(mesh.nCells(), vector(0, 0, 0));

                forAll(H,i)
                {
                        const scalar x = mesh.C() [i][0];
//		        const scalar y = mesh.C() [i][1];
//            		const scalar z = mesh.C() [i][2];

			// constant-gradient applied field
			H[i] = vector( Hmax*x , 0., 0.);

                }
                H.writeEntry("",os);

        #};
};


boundaryField
{
    wall
    {
        type            zeroGradient;//fixedValue;
//        value           uniform (0 0 0);
    }
}


// ************************************************************************* //
